group 'nl.han'
version '1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: "jacoco"

mainClassName = 'nl.han.Application'

defaultTasks 'run'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    testCompile 'junit:junit:4.12'
    testCompile group: 'org.powermock', name: 'powermock-module-junit4', version: '2.0.0-beta.5'
    testCompile group: 'org.powermock', name: 'powermock-api-mockito2', version: '2.0.0-beta.5'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '2.13.0'


    compile "com.sparkjava:spark-core:2.7.1"
    compile group: 'com.sparkjava', name: 'spark-debug-tools', version: '0.5'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.13'
    compile group: 'org.rxtx', name: 'rxtx', version: '2.1.7'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'
    compile 'com.squareup.okhttp3:okhttp:3.9.1'
    compile 'org.mongodb.morphia:morphia:1.3.2'
}

jar {
    manifest {
        attributes "Main-Class": "$mainClassName"
    }

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }

    archiveName "gateway-" + version + ".jar"
}



jacoco {
    toolVersion = "0.7.9"
    reportsDir = file("$buildDir/customJacocoReportDir")
}
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}
test {
    jacoco {
        append = false
        destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
        classDumpDir = file("$buildDir/jacoco/classpathdumps")
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.75
            }
        }

        rule {
            enabled = false
            element = 'CLASS'
            includes = ['org.gradle.*']

            limit {
                counter = 'LINE'
                value = 'TOTALCOUNT'
                maximum = 0.3
            }
        }
    }
}