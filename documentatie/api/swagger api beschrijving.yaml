openapi: 3.0.0
info:
  title: 'Burgers Zoo Ranger: Gateway en Backend api'
  version: 1.0.0
  description: >-
    API beschrijvingen van de gateway en backend van het Burgers Zoo Rangers
    systeem. De gateway zal primair praten naar de backend om het gebruik en de
    status van de poten door te geven aan de backend. De backend zal
    configuratie van poten versturen naar de gateway. <br/><br/> In deze versie
    van de api specificaties is geen authorisatie of authenticatie aanwezig.
tags:
  - name: Backend
    description: >-
      Alle api calls die bij de backend horen. Deze wordt aangeroepen door de
      Gateway.
  - name: Gateway
    description: >-
      Alle api calls die bij de gateway horen. Deze wordt aangeroepen door
      backend.
paths:
  /poten:
    post:
      tags:
        - Backend
      summary: Registreren van nieuw poot.
      description: >-
        Registreren van een nieuw poot. Response bevat het nieuw aangemaakte
        poot.
      responses:
        '201':
          description: Nieuwe poot aangemaakt
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Poot'
        '500':
          description: Fout bij het aanmaken van een nieuw poot
  '/poten/{pootid}/config':
    get:
      tags:
        - Backend
      summary: Opvragen configuratie poot
      description: Het opvragen van de configuratie van een specifieke poot.
      parameters:
        - in: path
          name: pootid
          schema:
            type: integer
          required: true
          description: 'ID van de poot, waarvan de config wordt opgevraagd'
      responses:
        '200':
          description: De configuratie van de poot
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Config'
        '404':
          description: Configuratie niet gevonden
        '500':
          description: Configuratie kon niet worden opgehaald want redenen
  '/poten/{pootid}/logs':
    post:
      tags:
        - Backend
      summary: Verwerken van de logdata vanuit een poot.
      description: >-
        Verzenden van log-data naar de backend vanuit de gateway. Elk request
        bevat de logdata van 1 poot.
      requestBody:
        content:
          poot:
            schema:
              $ref: '#/components/schemas/Logging'
      parameters:
        - in: path
          name: pootid
          schema:
            type: integer
          required: true
          description: poot id
      responses:
        '201':
          description: Logging opgeslagen
        '404':
          description: Poot kon niet worden gevonden
        '500':
          description: Logging kon niet worden opgeslagen
  '/poten/{pootid}/scan':
    post:
      tags:
        - Backend
      summary: Bezoek poot
      description: >-
        Verwerken van de ranger die bij een bepaalde poot komt. Wanneer een
        ranger een poot scant wordt het kaartid via de gateway naar de backend
        gestuurd. Dit is het endpoint in de backend die dit ontvangt.
      requestBody:
        content:
          pas:
            schema:
              $ref: '#/components/schemas/NFC'
      parameters:
        - in: path
          name: pootid
          schema:
            type: integer
          required: true
          description: ID van de poot die gescand is
      responses:
        '201':
          description: Bezoek successvol
        '400':
          description: Ranger bestaat niet
        '404':
          description: Poot kan niet gevonden worden
        '500':
          description: Poot scan niet opgeslagen
  '/poten/{pootid}':
    put:
      tags:
        - Gateway
      summary: Zet instellingen van een poot
      description: >-
        Overschrijf de instellingen van een poten met nieuwe informatie. Wanneer
        de instellingen niet anders zijn dan de instellingen die al bekend zijn
        dan zal de gateway niks versturen naar de poot.
      parameters:
        - name: pootid
          in: path
          required: true
          schema:
            type: integer
          description: Het ID van de poot waarvan de instellingen ingesteld moeten worden
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Config'
      operationId: zet instellingen van een pootje
      responses:
        '200':
          description: >-
            De instellingen staan goed op de poot. Er wordt geen transactie
            gestart.
        '202':
          description: >-
            De instellingen gaan naar de poot worden verzonden, maar dit kan
            even duren. De backend zal via voortgangs-updates op de hoogte
            worden gehouden van de voortgang. Als de upload faalt dan zal dit
            ook via deze updates worden gegeven
          content:
            application/json:
              schema:
                type: integer
                description: >-
                  Transactie id voor het loggen van de update voortgang. Zie
                  response omschrijving voor meer info
        '404':
          description: 'De poot bestaat niet. '
        '503':
          description: >-
            De poot is op dit moment niet online en er zal niet geprobeerd
            worden om een transactie te starten.
  '/poten/update/{transactieID}':
    put:
      tags:
        - Backend
      summary: Voortgang van de update transactie
      description: >-
        Endpoint voor het updaten van de update voortang. Dit wordt door de
        gateway verzorgt en rekent uit hoever het versturen van de de
        configuratie naar de gateway is. Dit is alleen van toepassing op het
        moment dat er iets te updaten is. Niet alle update acties geven een
        transactie id terug.
      parameters:
        - name: transactieID
          in: path
          required: true
          schema:
            type: integer
          description: Transactie id voor het updaten van de poot
      requestBody:
        description: Optional description in *Markdown*
        required: true
        content:
          application/json:
            schema:
              properties:
                voortgang:
                  type: integer
                  minimum: 0
                  maximum: 100
                  description: 'Voortgang status, in procenten'
      responses:
        '200':
          description: Progress update ontvangen
        '404':
          description: Progress transactie id niet bekent
components:
  schemas:
    Config:
      description: Poot configuratie.
      properties:
        pootid:
          type: integer
        weetjes:
          type: array
          items:
            type: string
            format: url
        dierengeluid:
          type: string
          format: url
    Poot:
      description: Representeert een fisieke poot in de dierentuin.
      properties:
        pootid:
          type: integer
          description: id van de poot
    Logging:
      description: Logging data
      properties:
        pootid:
          type: integer
        logValues:
          type: array
          items:
            $ref: '#/components/schemas/LogValue'
        timestamp:
          type: string
          format: timestamp
          description: Timestamp of the loggin values
    LogValue:
      description: Gemeten log values inclusief welke sensor gemeten is
      properties:
        name:
          type: string
          description: 'log value type, beschrijft welke sensor gemeten is.'
        value:
          type: string
          description: 'Log value, bevat de gemeten waardes'
    NFC:
      description: Een NFC kaart die een ranger gebruikt om de poten te scannen.
      properties:
        pasid:
          type: integer
          description: id van de kaart
